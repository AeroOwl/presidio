trigger: # Build triggers	
  batch: true # batch changes if true, start a new build for every push if false	
  branches:
      include: # branch names which will trigger a build	
      - development	
      - master
  paths:
    include: # file paths which must match to trigger a build	
      - Dockerfile.golang.deps	
      - Gopkg.lock	
      - Gopkg.toml	
      - Dockerfile.python.deps	
      - presidio-analyzer/requirements.txt
pr: 
  branches:
      include: # branch names which will trigger a build	
      - development	
      - masters
stages:
  - stage: GolangDeps # Build golang deps
    jobs: # A job is a collection of steps to be run by an agent 	

      - job: BuildGolangDeps
        timeoutInMinutes: 15  # how long to run the job before automatically cancelling	
        pool:
          vmImage: 'ubuntu-latest'
        steps:        
        - task: Docker@2
          displayName: 'Build and Push Golang dependencies'
          inputs:
            containerRegistry: $(registry) # input registry name	
            repository: presidio-golang-deps # name of image to build	
            Dockerfile: Dockerfile.golang.deps # dockerfile path	
            tags: | # image tags	
              $(Build.BuildId)	
        - task: Docker@2
          displayName: 'Push Branch tag'
          condition: and(ne(variables['Build.SourceBranchName'], 'master'), ne(variables['Build.SourceBranchName'], 'development'))
          inputs:
            containerRegistry: $(registry)            
            repository: 'presidio-golang-deps'
            command: 'buildAndPush'
            Dockerfile: Dockerfile.golang.deps
            tags: '$(Build.SourceBranchName)'
  - stage: PythonDeps # Build python deps
    jobs: # A job is a collection of steps to be run by an agent 	

      - job: BuildPytonDeps
        timeoutInMinutes: 90  # how long to run the job before automatically cancelling	
        pool:
          vmImage: 'ubuntu-latest'
        steps:        
        - task: Docker@2
          displayName: 'Build and Push Python dependencies'
          inputs:
            containerRegistry: $(registry) # input registry name	
            repository: 'presidio-python-deps'
            Dockerfile: Dockerfile.python.deps # dockerfile path
            tags: | # image tags	
              $(Build.BuildId)	
        - task: Docker@2
          displayName: 'Push Branch tag'
          condition: and(ne(variables['Build.SourceBranchName'], 'master'), ne(variables['Build.SourceBranchName'], 'development'))
          inputs:
            containerRegistry: $(registry)            
            repository: 'presidio-python-deps'
            command: 'buildAndPush'
            Dockerfile: Dockerfile.python.deps
            tags: '$(Build.SourceBranchName)'

