variables:
  GOBIN: '$(GOPATH)/bin'
  GOPATH: '$(system.defaultWorkingDirectory)/gopath'
  MODULEPATH: '$(GOPATH)/src/github.com/$(build.repository.name)'
  GOROOT: '/usr/local/go1.11'
  MASTER_BRANCH_LABEL: latest # tag name of master branch
  DEV_BRANCH_LABEL: latest-dev # tag name of development branch

trigger: 
  batch: true 
  branches:
      include: 
      - development	
      - master
  paths:
    include: 
      - Dockerfile.golang.deps	
      - Gopkg.lock	
      - Gopkg.toml	
      - Dockerfile.python.deps	
      - presidio-analyzer/requirements.txt
pr: 
  branches:
      include: 
      - development	
      - masters
stages:
  - stage: GolangDeps # Build golang deps
    jobs: 

      - job: BuildGolangDeps
        timeoutInMinutes: 15  # how long to run the job before automatically cancelling	
        pool:
          vmImage: 'ubuntu-latest'
        steps:        
        - task: Docker@2
          displayName: 'Build and Push Golang dependencies'
          inputs:
            containerRegistry: $(registry) # input registry name	
            repository: presidio-golang-deps 
            Dockerfile: Dockerfile.golang.deps 
            tags: | 
              $(Build.BuildId)	
        - task: Docker@2 # Feature branch CIs are pushed with branch-name tag. they don't have build-completion trigger for presidio-CI.  
          displayName: 'Push Branch tag'
          condition: and(ne(variables['Build.SourceBranchName'], 'master'), ne(variables['Build.SourceBranchName'], 'development'))
          inputs:
            containerRegistry: $(registry)            
            repository: 'presidio-golang-deps'
            command: 'buildAndPush'
            Dockerfile: Dockerfile.golang.deps
            tags: '$(Build.SourceBranchName)'
  - stage: PythonDeps # Build python deps
    dependsOn: []    # this removes the implicit dependency on previous stage and causes this to run in parallel
    jobs: # 

      - job: BuildPytonDeps
        timeoutInMinutes: 90  
        pool:
          vmImage: 'ubuntu-latest'
        steps:        
        - task: Docker@2
          displayName: 'Build and Push Python dependencies'
          inputs:
            containerRegistry: $(registry) # input registry name	
            repository: 'presidio-python-deps'
            Dockerfile: Dockerfile.python.deps 
            tags: | # image tags	
              $(Build.BuildId)	
        - task: Docker@2 # Feature branch CIs are pushed with branch-name tag. they don't have build-completion trigger for presidio-CI.  
          displayName: 'Push Branch tag'
          condition: and(ne(variables['Build.SourceBranchName'], 'master'), ne(variables['Build.SourceBranchName'], 'development'))
          inputs:
            containerRegistry: $(registry)            
            repository: 'presidio-python-deps'
            command: 'buildAndPush'
            Dockerfile: Dockerfile.python.deps
            tags: '$(Build.SourceBranchName)'
  - stage: BuildAndPushPresidio
    dependsOn: 
    - GolangDeps
    - PythonDeps
    jobs:
      - job:  BuildAndPushPresidio
        timeoutInMinutes: 90  
        pool:
          vmImage: 'ubuntu-latest'
        steps:  
        - template: templates/presidio-build-template.yaml  # Template reference
          parameters:
            registry_name: $(registry_name)
        registry: $(registry)
        deps_label: $(Build.BuildId)
      

